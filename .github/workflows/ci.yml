name: build-and-test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: hospital_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=5

    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: hospital_db
      POSTGRES_HOST: 127.0.0.1
      POSTGRES_PORT: 5432
      REDIS_HOST: 127.0.0.1
      REDIS_PORT: 6379

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..20}; do
            nc -z 127.0.0.1 5432 && echo "PostgreSQL is up!" && break
            echo "‚è≥ Waiting for PostgreSQL..."
            sleep 3
          done

      - name: Wait for Redis to be ready
        run: |
          for i in {1..20}; do
            nc -z 127.0.0.1 6379 && echo "Redis is up!" && break
            echo "Waiting for Redis..."
            sleep 3
          done

      - name: Run ESLint
        run: npm run lint

      - name: Run tests with coverage
        run: npm test
